// quick way to check label position
@mixin label($position:(left,top,right,bottom,none))
  @each $pos in $position
    @if $ff-label-position == $pos
      @content

@mixin ifTruthy($tag)
  @if $tag != false and $tag != none and $tag != 0 and $tag != inherit
    @content

@mixin ifFalsy($tag)
  @if $tag == false or $tag == none or $tag == 0 or $tag == inherit
    @content

// prevent border-radius confusion
@mixin border-radius($pos)
  @if $pos == top
    border-radius: $ff-input-round $ff-input-round 0 0
  @else if $pos == bottom
    border-radius: 0 0 $ff-input-round $ff-input-round
  @else if $pos == left
    border-radius: $ff-input-round 0 0 $ff-input-round
  @else if $pos == right
    border-radius: 0 $ff-input-round $ff-input-round 0
  @else if $pos == top-left
    border-radius: $ff-input-round 0 0 0
  @else if $pos == top-right
    border-radius: 0 $ff-input-round 0 0
  @else if $pos == bottom-left
    border-radius: 0 0 0 $ff-input-round
  @else if $pos == bottom-right
    border-radius: 0 0 $ff-input-round 0

// border-shortcut
@mixin border()
  border: $ff-input-border-width $ff-input-border-style $ff-input-border-color

// shortcut to style siblings
@mixin sibling-state($sibling:label)
  ~ .#{$sibling}-text
    @content

// set colors on input state
@mixin color-state($color)
  // removing color-state on required fields
  @if $color == undo
    border-color: $ff-input-border-color
    background: $ff-input-bg
    @if $ff-state-label-change-color
      +sibling-state()
        color: $ff-label-color
        @if $ff-label-cap
          background: $ff-label-cap-bg
          border-color: $ff-input-border-color
    @if $ff-state-help-change-color
      +sibling-state(help)
        color: $ff-help-color
    @if $ff-state-style == shadow
      box-shadow: $ff-input-box-shadow
    @else if $ff-state-style == border
      border-color: $ff-input-border-color

    &:focus
      background: $ff-state-focus-bg

    // apply color-state to everything else
  @else
    @if $ff-state-style == shadow
      box-shadow: #{$ff-state-shadow} rgba($color, 0.55)
    @else if $ff-state-style == border
      border-color: rgba($color, 0.85)

    @if $ff-state-help-change-color
      +sibling-state(help)
        color: $color
    @if $ff-state-label-change-color
      +sibling-state()
        @if $ff-label-cap
          background: $color
          @if lightness($color) > 50%
            color: white
        @else
          color: $color
    @if $ff-state-change-on-success
      +sibling-state()
        // add animated transition of color here -AL


// responsive
@mixin break($media)
  @if $media == mobile-only
    @media screen and (max-width:$break-small)
      @content

  @else if $media == small
    @media screen and (min-width:$break-small +1)
      @content

  @else if $media == medium
    @media screen and (min-width:$break-medium +1)
      @content

  @else if $media == large
    @media screen and (min-width:$break-large +1)
      @content


// font-stacks
// found on: http://cssfontstack.com/
$arial: Arial, "Helvetica Neue", Helvetica, sans-serif
$calibri: Calibri, Candara, Segoe, "Segoe UI", Optima, Arial, sans-serif
$cambria: Cambria, "Hoefler Text", Utopia, "Liberation Serif", "Nimbus Roman No9 L Regular", Times, "Times New Roman", serif
$century: "Century Gothic", CenturyGothic, AppleGothic, sans-serif
$consolas: Consolas, monaco, monospace
$gil: "Gill Sans", "Gill Sans MT", Calibri, sans-serif
$helvetica: "Helvetica Neue", Helvetica, Arial, sans-serif
$impact: Impact, Haettenschweiler, "Franklin Gothic Bold", Charcoal, "Helvetica Inserat", "Bitstream Vera Sans Bold", "Arial Black", sans serif

$hoefler: "Hoefler Text", "Baskerville old face", Garamond, "Times New Roman", serif
$lucida: "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", Geneva, Verdana, sans-serif
$monaco: Monaco, Consolas, "Lucida Console", monospace
$rockwell: Rockwell, "Courier Bold", Courier, Georgia, Times, "Times New Roman", serif